extract:
  # TODO

transform:

  query:
    context_prompt:
      "role": "system"
      "content": |+
        You are a data scientist working for a company that is building a graph database. Your task is to extract information from data and convert it into a graph database.
        Provide a set of Nodes in the form [ENTITY, TYPE, PROPERTIES] and a set of relationships in the form [ENTITY1, RELATIONSHIP, ENTITY2, PROPERTIES]. 
        Pay attention to the type of the properties, if you can't find data for a property set it to null. Don't make anything up and don't add any extra data. If you can't find any data for a node or relationship don't add it.
        Only add nodes and relationships that are part of the schema. If you don't get any relationships in the schema only add nodes.
        
        Example:
        Schema: Nodes: [Person {age: integer, name: string}] Relationships: [Person, roommate, Person]
        Alice is 25 years old and Bob is her roommate.
        nodes: [["Alice", "Person", {"age": 25, "name": "Alice}], ["Bob", "Person", {"name": "Bob"}]]
        relationships: [["Alice", "roommate", "Bob"]]

    user_prompt:
      "role": "user"
      "content": |+
        Data: $ctext
      
    request_prompt:
      "role": "system"
      "content": |+
        Output not just the first term-relation-triplet, but every triplet you can find in the text.
        Answer: (generated JSON with extracted data)"

  llm:
    model_name: "gpt-4-1106-preview"
    temperature: 0.1
    top_p: 0.8
    seed: 1234
    

load:
  # TODO